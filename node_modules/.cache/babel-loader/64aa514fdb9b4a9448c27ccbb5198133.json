{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rudid\\\\OneDrive\\\\Documents\\\\React\\\\sharestead-frontend\\\\src\\\\components\\\\RenameModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport { faRedo } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport axios from 'axios';\nimport CustomToast from './CustomToast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RenameModal(props) {\n  _s();\n\n  const [photoName, setPhotoName] = useState(\"\");\n  const [disableButton, setDisableButton] = useState(false);\n  const [showToast, setShowToast] = useState(false);\n  const [success, setSuccess] = useState(true);\n  const [toastMessage, setToastMessage] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setDisableButton(true);\n    handlePostRequest();\n  };\n\n  const handlePostRequest = () => {\n    let email = localStorage.getItem('email');\n    let token = localStorage.getItem('token');\n    const headers = {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    };\n    axios.put(`http://sharestead-env-2.eba-mbvpyjui.eu-west-3.elasticbeanstalk.com/metadata/update/${email}/`, null, {\n      headers: headers\n    }).then(response => {\n      setSuccess(true);\n\n      if (response.status === 200) {\n        setToastMessage(response.data.message);\n      }\n    }).catch(error => {\n      console.log(error.message);\n      if (error.response.status === 405) setToastMessage(error.response.data.message);else if (error.response.status === 404) setToastMessage(\"User could not be found\");else setToastMessage(\"Photo is already shared with that user\");\n      setSuccess(false);\n    });\n    setShowToast(true);\n    setTimeout(() => {\n      setShowToast(false);\n    }, 2000);\n    setDisableButton(false);\n  };\n\n  const handleInputChange = e => {\n    setPhotoName(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, { ...props,\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        id: \"contained-modal-title-vcenter\",\n        children: \"Rename\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"New photo name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter new name\",\n          name: \"rename\",\n          onChange: handleInputChange,\n          values: photoName,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        onClick: handleSubmit,\n        disabled: disableButton,\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faRedo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), \" \", disableButton ? 'Please wait...' : 'Rename']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        \"display\": showToast ? \"block\" : \"none\"\n      },\n      children: /*#__PURE__*/_jsxDEV(CustomToast, {\n        success: success,\n        message: toastMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RenameModal, \"h46Blp58wVXdvnhGcPnDczAB+4Q=\");\n\n_c = RenameModal;\nexport default RenameModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"RenameModal\");","map":{"version":3,"sources":["C:/Users/rudid/OneDrive/Documents/React/sharestead-frontend/src/components/RenameModal.js"],"names":["React","useState","Modal","Button","Form","faRedo","FontAwesomeIcon","axios","CustomToast","RenameModal","props","photoName","setPhotoName","disableButton","setDisableButton","showToast","setShowToast","success","setSuccess","toastMessage","setToastMessage","handleSubmit","e","preventDefault","handlePostRequest","email","localStorage","getItem","token","headers","put","then","response","status","data","message","catch","error","console","log","setTimeout","handleInputChange","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Modal, Button, Form } from 'react-bootstrap'\r\nimport { faRedo } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport axios from 'axios'\r\nimport CustomToast from './CustomToast'\r\n\r\nfunction RenameModal(props) {\r\n\r\n    const [photoName, setPhotoName] = useState(\"\");\r\n    const [disableButton, setDisableButton] = useState(false);\r\n    const [showToast, setShowToast] = useState(false);\r\n    const [success, setSuccess] = useState(true);\r\n    const [toastMessage, setToastMessage] = useState(\"\");\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        setDisableButton(true);\r\n        handlePostRequest();\r\n    }\r\n\r\n    const handlePostRequest = () => {\r\n        let email = localStorage.getItem('email');\r\n        let token = localStorage.getItem('token');\r\n\r\n        const headers = {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }\r\n\r\n        axios.put(`http://sharestead-env-2.eba-mbvpyjui.eu-west-3.elasticbeanstalk.com/metadata/update/${email}/`, null, {\r\n            headers: headers\r\n        }).then(response => {\r\n            setSuccess(true);\r\n            if (response.status === 200) {\r\n                setToastMessage(response.data.message);\r\n            }\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n            if (error.response.status === 405)\r\n                setToastMessage(error.response.data.message);\r\n            else if (error.response.status === 404)\r\n                setToastMessage(\"User could not be found\");\r\n            else\r\n                setToastMessage(\"Photo is already shared with that user\");\r\n\r\n            setSuccess(false);\r\n        });\r\n\r\n        setShowToast(true);\r\n        setTimeout(() => {\r\n            setShowToast(false);\r\n        }, 2000);\r\n\r\n        setDisableButton(false);\r\n    }\r\n\r\n    const handleInputChange = e => {\r\n        setPhotoName(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Rename\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form.Group>\r\n                    <Form.Label>New photo name:</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Enter new name\" name=\"rename\"\r\n                        onChange={handleInputChange} values={photoName} required />\r\n                </Form.Group>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"success\" onClick={handleSubmit} disabled={disableButton}>\r\n                    <FontAwesomeIcon icon={faRedo} /> {disableButton ? 'Please wait...' : 'Rename'}\r\n                </Button>\r\n            </Modal.Footer>\r\n            <div style={{ \"display\": showToast ? \"block\" : \"none\" }}>\r\n                <CustomToast success={success} message={toastMessage} />\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default RenameModal\r\n\r\n"]},"metadata":{},"sourceType":"module"}